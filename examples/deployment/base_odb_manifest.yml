---
name: ((broker_deployment_name))

variables:
- name: broker_password
  type: password

releases:
- name: ((broker_release))
  version: ((broker_version))
- name: ((service_adapter_release))
  version: ((service_adapter_version))
- name: routing
  version: latest
- name: bosh-dns-aliases
  version: latest
- name: loggregator
  version: latest
- name: bpm
  version: latest

stemcells:
- alias: &stemcell_alias ((stemcell_alias))
  os: &stemcell_os ((meta.stemcell.os))
  version: &stemcell_version "((meta.stemcell.version))"

addons:
- name: bpm
  jobs:
  - name: bpm
    release: bpm

- name: bosh-dns-aliases
  jobs:
  - name: bosh-dns-aliases
    release: bosh-dns-aliases
    properties:
      aliases:
      - domain: routing-api.service.cf.internal
        targets:
        - query: '*'
          instance_group: api
          deployment: ((cf.deployment_name))
          network: ((meta.services_subnet))
          domain: bosh
      - domain: nats.service.cf.internal
        targets:
        - query: '*'
          instance_group: nats
          deployment: ((cf.deployment_name))
          network: ((meta.services_subnet))
          domain: bosh
      - domain: _.nats.service.cf.internal
        targets:
        - query: '_'
          instance_group: nats
          deployment: ((cf.deployment_name))
          network: ((meta.services_subnet))
          domain: bosh

instance_groups:
- name: broker
  instances: 1
  vm_type: ((meta.vm_type))
  vm_extensions: ((meta.instance_groups_vm_extensions))
  stemcell: *stemcell_alias
  networks: [{name: ((meta.services_subnet))}]
  azs: [((meta.az))]
  jobs:
  - name: register-broker
    release: ((broker_release))
    properties:
      broker_name: ((broker_name))
      broker_uri: https://((broker_uri))

  - name: deregister-broker
    release: ((broker_release))
    properties:
      broker_name: ((broker_name))
    jobs: []

  - name: delete-all-service-instances-and-deregister-broker
    release: ((broker_release))
    properties:
      broker_name: ((broker_name))
      polling_interval_seconds: 10 # matches broker_client_default_async_poll_interval_seconds in cf manifest
    jobs: []

  - name: delete-all-service-instances
    release: ((broker_release))
    properties:
      polling_interval_seconds: 10 # matches broker_client_default_async_poll_interval_seconds in cf manifest
    jobs: []

  - name: upgrade-all-service-instances
    release: ((broker_release))
    properties:
      max_in_flight: 3
      polling_interval_seconds: 10
      canaries: 1
    jobs: []

  - name: orphan-deployments
    release: ((broker_release))
    properties: {}
    jobs: []

  - name: recreate-all-service-instances
    release: ((broker_release))
    properties: {}
    jobs: []

  - name: broker
    release: ((broker_release))
    properties:
      expose_operational_errors: false
      disable_ssl_cert_verification: ((disable_ssl_cert_verification))
      startup_banner: true
      port: &broker_port 8080
      username: broker
      password: ((broker_password))
      shutdown_timeout_in_seconds: 10
      bosh:
        url: ((bosh.url))
        authentication:
          uaa:
            client_id: ((bosh.authentication.username))
            client_secret: ((bosh.authentication.password))
        root_ca_cert: ((bosh.root_ca_cert))
      cf:
        root_ca_cert: ((cf.router.ca_cert))
        url: ((cf.api_url))
        uaa:
          url: ((cf.uaa.url))
          authentication:
            user_credentials:
              username: ((cf.user_credentials.username))
              password: ((cf.user_credentials.password))
      service_deployment: {}
      service_catalog:
        id: ((service_catalog_id))
        service_name: ((service_catalog_service_name))
        service_description: Service Description
        bindable: true
        plan_updatable: true
        metadata:
          display_name: Service Broker
        tags:
          - pivotal
        global_properties:
          persistence: true
        plans: []

  - name: route_registrar
    release: routing
    consumes:
      nats-tls:
        from: nats-tls
        deployment: ((cf.deployment_name))
      routing_api:
        from: routing_api
        deployment: ((cf.deployment_name))
    properties:
      nats:
        tls:
          enabled: true
          client_cert: ((nats.tls.certificate))
          client_key: ((nats.tls.private_key))
      route_registrar:
        routes:
          - name: ((broker_route_name))
            registration_interval: 20s
            port: *broker_port
            uris: [((broker_uri))]

update:
  canaries: 1
  canary_watch_time: 3000-180000
  update_watch_time: 3000-180000
  max_in_flight: 4
